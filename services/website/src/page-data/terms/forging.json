{
  "language": "en",
  "slug": "/terms/forging",
  "template": "TermDetailPage",
  "title": "Forging",
  "description": "A transaction which forges tokens creates new tokens, providing that the corresponding monetary policy script is satisfied.",
  "aliases": [
    "forging",
    "forge",
    "forged",
    "minting",
    "minted",
    "minting",
    "minter",
    "txs"
  ],
  "keywords": [
    "forging",
    "forge",
    "forged",
    "minting",
    "minted",
    "minter",
    "block",
    "tokens",
    "transactions",
    "txs",
    "tx"
  ],
  "params": {
    "source": "/en/terms/forging.md"
  },
  "props": {
    "body": "A transaction which forges tokens creates new tokens, providing that the corresponding monetary policy script is satisfied. The amount forged can be negative, in which case the tokens will be destroyed instead of created.",
    "source": {
      "compiledSource": "var h=Object.defineProperty,u=Object.defineProperties;var y=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var c=(e,t,o)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,a=(e,t)=>{for(var o in t||(t={}))i.call(t,o)&&c(e,o,t[o]);if(s)for(var o of s(t))r.call(t,o)&&c(e,o,t[o]);return e},p=(e,t)=>u(e,y(t));var d=(e,t)=>{var o={};for(var n in e)i.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(e!=null&&s)for(var n of s(e))t.indexOf(n)<0&&r.call(e,n)&&(o[n]=e[n]);return o};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:e}=n,t=d(n,[\"components\"]);return mdx(MDXLayout,p(a(a({},layoutProps),t),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"A transaction which forges tokens creates new tokens, providing that the corresponding monetary policy script is satisfied. The amount forged can be negative, in which case the tokens will be destroyed instead of created.\"))}MDXContent.isMDXComponent=!0;\n",
      "scope": {}
    }
  }
}